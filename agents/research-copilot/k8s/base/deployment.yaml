apiVersion: apps/v1
kind: Deployment
metadata:
  name: research-copilot
  namespace: research-copilot
  labels:
    component: agent
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      component: agent
  template:
    metadata:
      labels:
        component: agent
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
        config.kubernetes.io/depends-on: "v1/ConfigMap/research-copilot-config,v1/Secret/api-credentials"
    spec:
      serviceAccountName: research-copilot
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        seccompProfile:
          type: RuntimeDefault
      containers:
      - name: research-agent
        image: research-copilot
        imagePullPolicy: Always
        ports:
        - name: metrics
          containerPort: 8080
          protocol: TCP
        - name: health
          containerPort: 8081
          protocol: TCP
        env:
        # LLM Configuration
        - name: LLM_URL
          valueFrom:
            configMapKeyRef:
              name: research-copilot-config
              key: LLM_URL
        - name: LLM_MODEL
          valueFrom:
            configMapKeyRef:
              name: research-copilot-config
              key: LLM_MODEL
        # Application Configuration
        - name: LOG_LEVEL
          valueFrom:
            configMapKeyRef:
              name: research-copilot-config
              key: LOG_LEVEL
        - name: ENVIRONMENT
          valueFrom:
            configMapKeyRef:
              name: research-copilot-config
              key: ENVIRONMENT
        - name: CONFIG_DIR
          valueFrom:
            configMapKeyRef:
              name: research-copilot-config
              key: CONFIG_DIR
        # Kubernetes Configuration
        - name: KUBERNETES_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        - name: POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        # API Credentials from Secrets
        - name: NOTION_TOKEN
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: notion-token
        - name: NOTION_DATABASE_ID
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: notion-database-id
        - name: SERPAPI_KEY
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: serpapi-key
              optional: true
        - name: BING_API_KEY
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: bing-api-key
              optional: true
        - name: BING_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: api-credentials
              key: bing-endpoint
              optional: true
        # Additional environment variables
        envFrom:
        - configMapRef:
            name: research-copilot-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: health
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 3
          successThreshold: 1
        readinessProbe:
          httpGet:
            path: /ready
            port: health
            scheme: HTTP
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
          successThreshold: 1
        startupProbe:
          httpGet:
            path: /health
            port: health
            scheme: HTTP
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 30
          successThreshold: 1
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          runAsNonRoot: true
          runAsUser: 1000
          runAsGroup: 1000
          capabilities:
            drop:
            - ALL
        volumeMounts:
        - name: config-templates
          mountPath: /app/config/templates
          readOnly: true
        - name: tmp
          mountPath: /tmp
        - name: cache
          mountPath: /app/cache
      volumes:
      - name: config-templates
        projected:
          sources:
          - configMap:
              name: tech-research-template
              optional: true
          - configMap:
              name: market-research-template
              optional: true
          - configMap:
              name: llm-research-template
              optional: true
      - name: tmp
        emptyDir:
          sizeLimit: 100Mi
      - name: cache
        emptyDir:
          sizeLimit: 500Mi
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      dnsConfig:
        options:
        - name: ndots
          value: "2"
        - name: edns0
